<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.lotte.chamomile.admin.authresource.domain.AuthResourceMapper">


  <!-- 포함된 권한 목록 -->
  <select id="findUsedResourceList" parameterType="net.lotte.chamomile.admin.authresource.api.dto.AuthResourceQuery"
          resultType="net.lotte.chamomile.admin.authtree.AuthTreeVO">
    <![CDATA[
    SELECT
        A.ROLE_ID   as roleId   /* 롤아이디 */
		   ,B.ROLE_NAME as roleName /*롤명  */
		FROM
		    CHMM_RESOURCE_ROLE_MAP A
		LEFT JOIN
		    CHMM_ROLE_INFO B ON A.ROLE_ID = B.ROLE_ID
		LEFT OUTER JOIN
		    CHMM_RESOURCE_INFO C ON A.RESOURCE_ID = C.RESOURCE_ID
 	  ]]>
    <!-- 검색조건 -->
    <where>
    A.RESOURCE_ID=#{searchResourceId}
    </where>
    ORDER BY B.ROLE_NAME
  </select>

  <!-- 미포함된 권한 목록 -->
  <select id="findUnUsedResourceList" parameterType="net.lotte.chamomile.admin.authresource.api.dto.AuthResourceQuery"
          resultType="net.lotte.chamomile.admin.authtree.AuthTreeVO">
    <![CDATA[
		SELECT
		    A.ROLE_ID   as roleId   /* 롤아이디 */
		   ,A.ROLE_NAME as roleName /* 롤명 */
		 FROM
		     CHMM_ROLE_INFO A
 	  ]]>
    <!-- 검색조건 -->
    <where>
    NOT EXISTS (
        SELECT
            1
        FROM
            CHMM_RESOURCE_ROLE_MAP B
        WHERE
            A.ROLE_ID = B.ROLE_ID AND B.RESOURCE_ID=#{searchResourceId}
        )
    </where>
    ORDER BY ROLE_NAME
  </select>

  <!-- 리소스 권한 목록 -->
  <select id="countAuthResourceByRoleId" parameterType="String" resultType="Integer">
		SELECT
		    COUNT(*)
		FROM
		    CHMM_RESOURCE_ROLE_MAP A
    <where>
        A.ROLE_ID=#{roleId}
    </where>
  </select>


  <!-- 권한 및 리소스 저장 -->
  <insert id="insertAuthResource" parameterType="net.lotte.chamomile.admin.authresource.domain.AuthResourceVO">
    INSERT INTO CHMM_RESOURCE_ROLE_MAP
        (RESOURCE_ID
        ,ROLE_ID
        ,SYS_INSERT_DTM
        ,SYS_INSERT_USER_ID
        ,USE_YN)
    VALUES
        (#{resourceId}
        ,#{roleId}
        ,#{sysInsertDtm}
        ,#{sysInsertUserId}
        ,#{useYn})
  </insert>

  <insert id="insertAuthResourceExcel" parameterType="net.lotte.chamomile.admin.authresource.domain.AuthResourceExcelVO">
    INSERT INTO CHMM_RESOURCE_ROLE_MAP
    (RESOURCE_ID
    ,ROLE_ID
    ,SYS_INSERT_DTM
    ,SYS_INSERT_USER_ID
    ,USE_YN)
    VALUES
      (#{resourceId}
      ,#{roleId}
      ,#{sysInsertDtm}
      ,#{sysInsertUserId}
      ,#{useYn})
  </insert>

  <!-- 권한 및 리소스  삭제 -->
  <delete id="deleteAuthResource" parameterType="java.util.List">
    DELETE FROM CHMM_RESOURCE_ROLE_MAP
    <where>
    RESOURCE_ID IN
        <foreach collection="list" item="id" index="index" open="(" separator="," close=")">
        #{id}
        </foreach>
    </where>
  </delete>

  <!-- 리소스권한 list 조회(엑셀용) -->
  <select id="findAuthResourceListExcel" parameterType="net.lotte.chamomile.admin.resource.api.dto.ResourceQuery" resultType="net.lotte.chamomile.admin.authresource.domain.AuthResourceExcelVO">
    <![CDATA[
    SELECT
		    A.ROLE_ID roleId /* 롤아이디 */
		    ,A.RESOURCE_ID resourceId /* 리소스 아이디 */
		    ,B.ROLE_NAME roleName /*롤명  */
		    ,C.RESOURCE_NAME resourceName /* 리소스명 */
		    ,A.USE_YN
		FROM
		     CHMM_RESOURCE_ROLE_MAP A
		LEFT JOIN
		     CHMM_ROLE_INFO B
		ON
		    A.ROLE_ID = B.ROLE_ID AND
		    B.ROLE_ID != 'root'
		LEFT JOIN
		    CHMM_RESOURCE_INFO C
		ON
		    A.RESOURCE_ID = C.RESOURCE_ID
 	  ]]>
    <!-- 검색조건 -->
    <where>
      <if test="searchResourceId != null and searchResourceId != ''"> AND A.RESOURCE_ID LIKE CONCAT(CONCAT('%',#{searchResourceId}),'%')  </if>
      <if test="searchResourceName != null and searchResourceName != ''"> AND C.RESOURCE_NAME LIKE CONCAT(CONCAT('%',#{searchResourceName}),'%')  </if>
      <if test="searchUseYn != null and searchUseYn != ''"> AND A.USE_YN = #{searchUseYn}  </if>
    </where>

    ORDER BY A.RESOURCE_ID
  </select>

  <!-- 리소스 권한 목록 조회 -->
  <select id="findResourceRoleList" parameterType="net.lotte.chamomile.admin.resource.api.dto.ResourceQuery"
          resultType="net.lotte.chamomile.admin.authresource.api.dto.ResourceRoleResponse">

    SELECT
    RESOURCE_ID resourceId, /* 리소스 아이디 */
    RESOURCE_URI resourceUri, /* 리소스 경로 */
    RESOURCE_NAME resourceName, /* 리소스 명 */
    RESOURCE_HTTPMETHOD resourceHttpMethod, /* http method */
    RESOURCE_DESC resourceDesc, /* 리소스_설명 */
    SECURITY_ORDER securityOrder, /* 리소스 순서 */
    USE_YN useYn, /* 사용 여부 */
    SYS_INSERT_DTM sysInsertDtm, /* 시스템_입력_일시 */
    SYS_INSERT_USER_ID sysInsertUserId, /* 시스템_입력_사용자_아이디 */
    SYS_UPDATE_DTM sysUpdateDtm, /* 시스템_수정_일시 */
    SYS_UPDATE_USER_ID sysUpdateUserId /* 시스템_수정_사용자_아이디 */
    FROM
    CHMM_RESOURCE_INFO A
    <!-- 검색조건 -->
    <where>
      <if test="searchResourceId != null and searchResourceId != ''">AND RESOURCE_ID LIKE '%' || #{searchResourceId} || '%'</if>
      <if test="searchResourceName != null and searchResourceName != ''">AND RESOURCE_NAME LIKE '%' || #{searchResourceName} || '%'</if>
      <if test="searchUseYn != null and searchUseYn != ''">AND USE_YN = #{searchUseYn}</if>
    </where>

  </select>

  <!-- 포함된 권한 목록 -->
  <select id="findRolesByResourceId" parameterType="String" resultType="String">
    SELECT
        A.ROLE_ID       roleId
		FROM
		    CHMM_RESOURCE_ROLE_MAP A
    <!-- 검색조건 -->
    <where>
      A.RESOURCE_ID=#{resourceId}
    </where>
    ORDER BY A.ROLE_ID
  </select>

</mapper>
